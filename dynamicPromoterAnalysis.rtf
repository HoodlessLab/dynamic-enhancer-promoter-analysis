{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;}
\margl1440\margr1440\vieww44600\viewh21780\viewkind0
\deftab720
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 #in command line using bedtools\
\cf2 \
filePath = \'91insertYourFilePathHere\'92\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 #take file with known human TSS and extend the intervals to 1.5 kb\
bedtools slop -i /\cf2 filePath\cf0 /all_promoters.bed -g /\cf2 filePath\cf0 /hg19.chrom.sizes -b 750 > \cf2 filePath\cf0 /all_promoters_extended.bed\
\
#overlap master list of promoters with H3K27ac, H3K27me3, H3K4me4 to annotate activation status\
\
bedtools intersect -loj -a /filePath/all_promoters_extended.bed -b /filePath/ME_H3K27me3.bed | bedtools intersect -loj -a stdin -b /filePath/DE_H3K27me3.bed | bedtools intersect -loj -a stdin -b /filePath/HE_H3K27me3.bed | bedtools intersect -loj -a stdin -b /filePath/HEP_H3K27me3.bed >  /filePath/all_promoters_extended_H3K27me3.bed\
\
bedtools intersect -loj -a /filePath/all_promoters_extended.bed -b /filePath/ME_H3K27ac.bed | bedtools intersect -loj -a stdin -b /filePath/DE_H3K27ac.bed | bedtools intersect -loj -a stdin -b /filePath/HE_H3K27ac.bed | bedtools intersect -loj -a stdin -b /filePath/HEP_H3K27ac.bed >  /filePath/all_promoters_extended_H3K27ac.bed\
\
bedtools intersect -loj -a /filePath/all_promoters_extended.bed -b /filePath/ME_H3K4me3.bed | bedtools intersect -loj -a stdin -b /filePath/DE_H3K4me3.bed | bedtools intersect -loj -a stdin -b /filePath/HE_H3K4me3.bed | bedtools intersect -loj -a stdin -b /filePath/HEP_H3K4me3.bed >  /filePath/all_promoters_extended_H3K4me3.bed\
\
#in R\
library \'93dbplyr\'94\
library \'93dplyr\'94\
library \'93utils\'94\
library \'93anchors\'94\
\
#the tables from the first step have to be cleaned up in R to be used for the downstream analysis as the output from bedtools can\'92t be used directly \
#create variable containing all chromosomes \
chrnumber <- c("chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chr11", "chr12", "chr13", "chr14", "chr15", "chr16", "chr17", "chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY")\
\
#input into this script is a table with chromosome locations in the first 3 rows (standard bed file format) and then a chromosome location which indicates a match was found-> this location is for instance repressed etc. or a \'93.\'94 meaning this location is not repressed\
#looks like this, in this example with just two timepoints, not 4\
# chr		start		end		match found_timepoint_1		match found_timepoint_2\
# chr1	23456	34567	.						.\
# chr2	23456	34567	chr2						.\
\
#load input table containing promoters and information if they are repressed at all time points\
promoter_repressed <- read.csv("filePath/all_promoters_extended_H3K27me3.csv\'94, header = FALSE)\
\
#replace the \'93chr\'94 in the repressed table with \'93K27me3\'94\
for (value in chrnumber)\{ chr <- value\
	promoter_repressed[] <- lapply(promoter_repressed, as.character)\
	promoter_repressed$V5[promoter_repressed$V5== chr]<- "K27me3"\
	promoter_repressed$V6[promoter_repressed$V6== chr]<- "K27me3"\
	promoter_repressed$V7[promoter_repressed$V7== chr]<- "K27me3"\
	promoter_repressed$V8[promoter_repressed$V8== chr]<- "K27me3"\
\}\
\
promoter_repressed <- promoter_repressed %>%distinct(.keep_all = TRUE)\
\
#load input table containing promoters and information if they are primed\
promoter_primed <- read.csv("filePath/all_promoters_extended_H3K4me3.csv\'94, header = FALSE)\
\
for (value in chrnumber)\{ chr <- value\
	promoter_primed[] <- lapply(promoter_primed, as.character)\
	promoter_primed$V5[promoter_primed$V5== chr]<- "primed"\
	promoter_primed$V6[promoter_primed$V6== chr]<- "primed"\
	promoter_primed$V7[promoter_primed$V7== chr]<- "primed"\
	promoter_primed$V8[promoter_primed$V8== chr]<- "primed"\
\}\
\
promoter_primed <- promoter_primed %>%distinct(.keep_all = TRUE)\
\
# merge the primed and repressed states together in one table\
promoter_repressed_primed <- merge(promoter_repressed, promoter_primed, by = c("V1","V2", "V3", "V4"))\
\
#combine the columns of the two joined datasets into joined columns\
\
for (value in 1:nrow(promoter_repressed_primed))\{\
  if (promoter_repressed_primed$V5.x[[value]] == ".") \{promoter_repressed_primed$V5.x[[value]] <- promoter_repressed_primed$V5.y[[value]]\}\
  if (promoter_repressed_primed$V6.x[[value]] == ".") \{promoter_repressed_primed$V6.x[[value]] <- promoter_repressed_primed$V6.y[[value]]\} \
  if (promoter_repressed_primed$V7.x[[value]] == ".") \{promoter_repressed_primed$V7.x[[value]] <- promoter_repressed_primed$V7.y[[value]]\}\
  if (promoter_repressed_primed$V8.x[[value]] == ".") \{promoter_repressed_primed$V8.x[[value]] <- promoter_repressed_primed$V8.y[[value]]\}\
\}\
\
for (value in 1:nrow(promoter_repressed_primed))\{\
  if (promoter_repressed_primed$V5.x[[value]] == "K27me3" && promoter_repressed_primed$V5.y[[value]] == "primed") \{promoter_repressed_primed$V5.x[[value]] <- "bivalent"\}\
  if (promoter_repressed_primed$V6.x[[value]] == "K27me3" && promoter_repressed_primed$V6.y[[value]] == "primed") \{promoter_repressed_primed$V6.x[[value]] <- "bivalent"\}\
  if (promoter_repressed_primed$V7.x[[value]] == "K27me3" && promoter_repressed_primed$V7.y[[value]] == "primed") \{promoter_repressed_primed$V7.x[[value]] <- "bivalent"\}\
  if (promoter_repressed_primed$V8.x[[value]] == "K27me3" && promoter_repressed_primed$V8.y[[value]] == "primed") \{promoter_repressed_primed$V8.x[[value]] <- "bivalent"\}\
\}\
\
#only keep the joined columns \
promoter_repressed_primed <- promoter_repressed_primed[,c(1:8)]\
\
#load input table containing promoters and information if they are active\
promoter_active <- read.csv("filePath/all_promoters_extended_H3K27ac.csv\'94, header = FALSE)\
\
for (value in chrnumber)\{ chr <- value\
	promoter_active[] <- lapply(promoter_active, as.character)\
	promoter_active$V5[promoter_active$V5== chr]<- "active"\
	promoter_active$V6[promoter_active$V6== chr]<- "active"\
	promoter_active$V7[promoter_active$V7== chr]<- "active"\
	promoter_active$V8[promoter_active$V8== chr]<- "active"\
\}\
\
promoter_active <- promoter_active %>%distinct(.keep_all = TRUE)\
\
# merge the active and repressed_primed states together in one table \
promoter_active_repressed_primed <- merge(promoter_repressed_primed, promoter_active, by = c("V1","V2", "V3", "V4"))\
\
promoter_active_repressed <- promoter_active_repressed %>%distinct(.keep_all = TRUE)\
\
#combine the columns of the two joined datasets into joined columns\
\
for (value in 1:nrow(promoter_active_repressed_primed))\{\
  if (promoter_active_repressed_primed$V5.x[[value]] == "primed" && promoter_active_repressed_primed$V5[[value]] == "active") \{promoter_active_repressed_primed$V5.x[[value]] <- promoter_active_repressed_primed$V5[[value]]\}\
  if (promoter_active_repressed_primed$V6.x[[value]] == "primed" && promoter_active_repressed_primed$V6[[value]] == "active") \{promoter_active_repressed_primed$V6.x[[value]] <- promoter_active_repressed_primed$V6[[value]]\}\
  if (promoter_active_repressed_primed$V7.x[[value]] == "primed" && promoter_active_repressed_primed$V7[[value]] == "active") \{promoter_active_repressed_primed$V7.x[[value]] <- promoter_active_repressed_primed$V7[[value]]\}\
  if (promoter_active_repressed_primed$V8.x[[value]] == "primed" && promoter_active_repressed_primed$V8[[value]] == "active") \{promoter_active_repressed_primed$V8.x[[value]] <- promoter_active_repressed_primed$V8[[value]]\}\
\}\
\
#only keep the joined columns \
promoter_active_repressed_primed <- promoter_active_repressed_primed[,c(1:8)]\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf2 \cb3 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\ri0\partightenfactor0
\cf2 #replace all remaining  .  in the dataset with \'93unmarked\'94. Those are promoters which are \'93unmarked\'94 or we have no information about this time point
\fs20 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0

\fs24 \cf0 \cb1 \
for (value in 1:nrow(promoter_active_repressed_primed))\{\
  if (promoter_active_repressed_primed$V5.x[[value]] == ".") \{promoter_active_repressed_primed$V5.x[[value]] <- "unmarked"\}\
  if (promoter_active_repressed_primed$V6.x[[value]] == ".") \{promoter_active_repressed_primed$V6.x[[value]] <- "unmarked"\}\
  if (promoter_active_repressed_primed$V7.x[[value]] == ".") \{promoter_active_repressed_primed$V7.x[[value]] <- "unmarked"\}\
  if (promoter_active_repressed_primed$V8.x[[value]] == ".") \{promoter_active_repressed_primed$V8.x[[value]] <- "unmarked"\}\
 \}\
\
#this is a table with all promoters in bed format in the columns V1,V2, V3, the gene name in V4, and their status on the 4 timepoints (ME, DE, HE and HEP) in V5, V6,V7 and V8\
#this file is the input file to create the alluvial plot\
\
write.csv(promoter_active_repressed_primed, file = "/filePath/promoter_active_repressed_primed.csv")\
\
#make alluvial plot\
library("operators\'94)\
library("alluvial\'94)\
library("ggplot2\'94)\
library("ggalluvial\'94)\
\
# contains data\
data <- read.csv("/filePath/enhancer_repressed_active_primed.csv")\
data <- data[,c(6:9)]\
#remove duplicates and save as data_combo as this file has every combination of states that exists in the dataset\
data_combo <- data %>%distinct(.keep_all = TRUE)\
\
#max_row is number of rows in data_combo, assign to variable \
\
#count how many occurrences of every combination of activation status exists in the data set\
\
for(n in 1:max_row) \{\
 \
  x <- sum(data$V5 == data_combo$ME[n] & data$V6== data_combo$DE[n]& data$V7== data_combo$HE[n] & data$V8== data_combo$HEP[n])\
  data_combo$freq[n] <- x\
\}\
\
#save alluvial data\
write.csv(data_combo,"/filePath/alluvial_plot_data.csv" )\
\
\
#plot alluvial plot\
alluvial_data <- data_combo\
ggplot(as.data.frame(alluvial_data),\
       aes(y = freq, axis1 = ME, axis2 = DE, axis3 = HE, axis4 = HEP)) +\
  geom_alluvium(aes(fill = HEP), width = 1/12) +\
  geom_stratum(width = 1/20, fill = "black", color = "grey") +\
  geom_label(stat = "stratum", label.strata = TRUE) +\
  theme_bw() +\
  scale_x_discrete(limits = c("ME", "DE", "HE", "HEP"), expand = c(.05, .05) ) +\
  scale_fill_brewer(type = "seq", palette = "Set1")\
\
\
\
\
\
\
\
\
\
}